@inproceedings{de_santiago_junior_method_2022,
	address = {Pittsburgh Pennsylvania},
	title = {A method and experiment to evaluate deep neural networks as test oracles for scientific software},
	isbn = {978-1-4503-9286-0},
	url = {https://dl.acm.org/doi/10.1145/3524481.3527232},
	doi = {10.1145/3524481.3527232},
	language = {en},
	urldate = {2025-06-12},
	booktitle = {Proceedings of the 3rd {ACM}/{IEEE} {International} {Conference} on {Automation} of {Software} {Test}},
	publisher = {ACM},
	author = {De Santiago Júnior, Valdivino Alexandre},
	month = may,
	year = {2022},
	pages = {40--51},
}

@inproceedings{naimi_new_2024,
	address = {Fes, Morocco},
	title = {A new approach for automatic test case generation from use case diagram using {LLMs} and prompt engineering},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-6530-6},
	url = {https://ieeexplore.ieee.org/document/10616548/},
	doi = {10.1109/ICCSC62074.2024.10616548},
	urldate = {2025-06-12},
	booktitle = {2024 {International} {Conference} on {Circuit}, {Systems} and {Communication} ({ICCSC})},
	publisher = {IEEE},
	author = {Naimi, Lahbib and Bouziane, El Mahi and Manaouch, Mohamed and Jakimi, Abdeslam},
	month = jun,
	year = {2024},
	pages = {1--5},
}

@inproceedings{de_almeida_ai_2024,
	address = {Salvador Bahia Brazil},
	title = {{AI} in {Service} of {Software} {Quality}: {How} {ChatGPT} and {Personas} {Are} {Transforming} {Exploratory} {Testing}},
	isbn = {979-8-4007-1777-2},
	shorttitle = {{AI} in {Service} of {Software} {Quality}},
	url = {https://dl.acm.org/doi/10.1145/3701625.3701657},
	doi = {10.1145/3701625.3701657},
	language = {en},
	urldate = {2025-06-12},
	booktitle = {Proceedings of the {XXIII} {Brazilian} {Symposium} on {Software} {Quality}},
	publisher = {ACM},
	author = {De Almeida, Ágatha and Collins, Eliane and Oran, Ana Carolina},
	month = nov,
	year = {2024},
	pages = {179--188},
}

@inproceedings{kapoor_ai-assisted_2025,
	address = {Bhilai, India},
	title = {{AI}-{Assisted} {Test} {Script} {Generation} for {GUI} {Applications}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-5623-6},
	url = {https://ieeexplore.ieee.org/document/10958949/},
	doi = {10.1109/ICAECT63952.2025.10958949},
	urldate = {2025-06-12},
	booktitle = {2025 {Fifth} {International} {Conference} on {Advances} in {Electrical}, {Computing}, {Communication} and {Sustainable} {Technologies} ({ICAECT})},
	publisher = {IEEE},
	author = {Kapoor, Saurabh},
	month = jan,
	year = {2025},
	pages = {1--5},
}

@inproceedings{mohacsi_ai-based_2021,
	address = {Honolulu, HI, USA},
	title = {{AI}-{Based} {Enhancement} of {Test} {Models} in an {Industrial} {Model}-{Based} {Testing} {Tool}},
	copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
	isbn = {978-1-7281-9630-5},
	url = {https://ieeexplore.ieee.org/document/9426031/},
	doi = {10.1109/SANER50967.2021.00080},
	urldate = {2025-06-12},
	booktitle = {2021 {IEEE} {International} {Conference} on {Software} {Analysis}, {Evolution} and {Reengineering} ({SANER})},
	publisher = {IEEE},
	author = {Mohacsi, Stefan and Felderer, Michael},
	month = mar,
	year = {2021},
	pages = {636--638},
}

@inproceedings{maia_ai-driven_2024,
	address = {Salvador Bahia Brazil},
	title = {{AI}-{Driven} {Acceptance} {Testing}: first insights exploring the educational potential for test analysts},
	isbn = {979-8-4007-1777-2},
	shorttitle = {{AI}-{Driven} {Acceptance} {Testing}},
	url = {https://dl.acm.org/doi/10.1145/3701625.3701691},
	doi = {10.1145/3701625.3701691},
	language = {en},
	urldate = {2025-06-12},
	booktitle = {Proceedings of the {XXIII} {Brazilian} {Symposium} on {Software} {Quality}},
	publisher = {ACM},
	author = {Maia, Caio Jordan De Lima and Aguiar, Yuska Paola Costa},
	month = nov,
	year = {2024},
	pages = {665--672},
}

@inproceedings{helmy_ai-driven_2024,
	address = {Cairo, Egypt},
	title = {{AI}-{Driven} {Testing}: {Unleashing} {Autonomous} {Systems} for {Superior} {Software} {Quality} {Using} {Generative} {AI}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-5140-8},
	shorttitle = {{AI}-{Driven} {Testing}},
	url = {https://ieeexplore.ieee.org/document/10620598/},
	doi = {10.1109/ITC-Egypt61547.2024.10620598},
	urldate = {2025-06-12},
	booktitle = {2024 {International} {Telecommunications} {Conference} ({ITC}-{Egypt})},
	publisher = {IEEE},
	author = {Helmy, Mona and Sobhy, Omar and ElHusseiny, Farida},
	month = jul,
	year = {2024},
	pages = {1--6},
}

@inproceedings{martin-lopez_ai-driven_2020,
	address = {Seoul South Korea},
	title = {{AI}-driven web {API} testing},
	isbn = {978-1-4503-7122-3},
	url = {https://dl.acm.org/doi/10.1145/3377812.3381388},
	doi = {10.1145/3377812.3381388},
	language = {en},
	urldate = {2025-06-12},
	booktitle = {Proceedings of the {ACM}/{IEEE} 42nd {International} {Conference} on {Software} {Engineering}: {Companion} {Proceedings}},
	publisher = {ACM},
	author = {Martin-Lopez, Alberto},
	month = jun,
	year = {2020},
	pages = {202--205},
}

@inproceedings{garlapati_ai-powered_2024,
	address = {Bangalore, India},
	title = {{AI}-{Powered} {Multi}-{Agent} {Framework} for {Automated} {Unit} {Test} {Case} {Generation}: {Enhancing} {Software} {Quality} through {LLM}’s},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-7666-1 979-8-3503-7668-5},
	shorttitle = {{AI}-{Powered} {Multi}-{Agent} {Framework} for {Automated} {Unit} {Test} {Case} {Generation}},
	url = {https://ieeexplore.ieee.org/document/10923987/},
	doi = {10.1109/GCAT62922.2024.10923987},
	urldate = {2025-06-12},
	booktitle = {2024 5th {IEEE} {Global} {Conference} for {Advancement} in {Technology} ({GCAT})},
	publisher = {IEEE},
	author = {Garlapati, Anusha and Satya Sai Muni Parmesh, M N V and {Savitha} and S, Jaisri},
	month = oct,
	year = {2024},
	pages = {1--5},
}

@inproceedings{hagar_ais_2025,
	address = {Naples, Italy},
	title = {{AIs} {Understanding} of {Software} {Test} {Architecture}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3315-3467-7},
	url = {https://ieeexplore.ieee.org/document/10962517/},
	doi = {10.1109/ICSTW64639.2025.10962517},
	urldate = {2025-06-12},
	booktitle = {2025 {IEEE} {International} {Conference} on {Software} {Testing}, {Verification} and {Validation} {Workshops} ({ICSTW})},
	publisher = {IEEE},
	author = {Hagar, Jon and Wissink, Tome},
	month = mar,
	year = {2025},
	pages = {194--199},
}

@inproceedings{prasetya_agent-based_2021,
	address = {Porto de Galinhas, Brazil},
	title = {An {Agent}-based {Architecture} for {AI}-{Enhanced} {Automated} {Testing} for {XR} {Systems}, a {Short} {Paper}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {978-1-6654-4456-9},
	url = {https://ieeexplore.ieee.org/document/9440175/},
	doi = {10.1109/ICSTW52544.2021.00044},
	urldate = {2025-06-12},
	booktitle = {2021 {IEEE} {International} {Conference} on {Software} {Testing}, {Verification} and {Validation} {Workshops} ({ICSTW})},
	publisher = {IEEE},
	author = {Prasetya, I. S. W. B. and Shirzadehhajimahmood, Samira and Ansari, Saba Gholizadeh and Fernandes, Pedro and Prada, Rui},
	month = apr,
	year = {2021},
	pages = {213--217},
}

@inproceedings{kaur_approach_2020,
	address = {Noida, India},
	title = {An {Approach} {To} {Extract} {Optimal} {Test} {Cases} {Using} {AI}},
	copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
	isbn = {978-1-7281-2791-0},
	url = {https://ieeexplore.ieee.org/document/9058244/},
	doi = {10.1109/Confluence47617.2020.9058244},
	urldate = {2025-06-12},
	booktitle = {2020 10th {International} {Conference} on {Cloud} {Computing}, {Data} {Science} \& {Engineering} ({Confluence})},
	publisher = {IEEE},
	author = {Kaur, Amandeep},
	month = jan,
	year = {2020},
	pages = {649--654},
}

@inproceedings{gao_approach_2022,
	address = {Newark, CA, USA},
	title = {An {Approach} to {GUI} {Test} {Scenario} {Generation} {Using} {Machine} {Learning}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {978-1-6654-8737-5},
	url = {https://ieeexplore.ieee.org/document/9898132/},
	doi = {10.1109/AITest55621.2022.00020},
	urldate = {2025-06-12},
	booktitle = {2022 {IEEE} {International} {Conference} {On} {Artificial} {Intelligence} {Testing} ({AITest})},
	publisher = {IEEE},
	author = {Gao, Jerry and Li, ShiTing and Tao, Chuanqi and He, Yejun and Anumalasetty, Amrutha Pavani and Joseph, Erica Wilson and Sripathi, Akshata Hatwar Kumbashi and Nayani, Himabindu},
	month = aug,
	year = {2022},
	pages = {79--86},
}

@inproceedings{olmez_automation_2024,
	address = {Würzburg, Germany},
	title = {Automation of {Test} {Skeletons} {Within} {Test}-{Driven} {Development} {Projects}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-7897-9},
	url = {https://ieeexplore.ieee.org/document/10663016/},
	doi = {10.1109/CSEET62301.2024.10663016},
	urldate = {2025-06-12},
	booktitle = {2024 36th {International} {Conference} on {Software} {Engineering} {Education} and {Training} ({CSEE}\&amp;{T})},
	publisher = {IEEE},
	author = {Olmez, Muhammet Mustafa and Gehringer, Edward},
	month = jul,
	year = {2024},
	pages = {1--10},
}

@inproceedings{yao_bugblitz-ai_2024,
	address = {Changsha, China},
	title = {{BugBlitz}-{AI}: {An} {Intelligent} {QA} {Assistant}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-8916-6},
	shorttitle = {{BugBlitz}-{AI}},
	url = {https://ieeexplore.ieee.org/document/10719045/},
	doi = {10.1109/ICSESS62520.2024.10719045},
	urldate = {2025-06-12},
	booktitle = {2024 {IEEE} 15th {International} {Conference} on {Software} {Engineering} and {Service} {Science} ({ICSESS})},
	publisher = {IEEE},
	author = {Yao, Yi and Wang, Jun and Hu, Yabai and Wang, Lifeng and Zhou, Yi and Chen, Jack and Gai, Xuming and Wang, Zhenming and Liu, Wenjun},
	month = sep,
	year = {2024},
	pages = {57--63},
}

@inproceedings{wang_deep_2024,
	address = {Lisbon Portugal},
	title = {Deep {Multiple} {Assertions} {Generation}},
	isbn = {979-8-4007-0609-7},
	url = {https://dl.acm.org/doi/10.1145/3650105.3652293},
	doi = {10.1145/3650105.3652293},
	language = {en},
	urldate = {2025-06-12},
	booktitle = {Proceedings of the 2024 {IEEE}/{ACM} {First} {International} {Conference} on {AI} {Foundation} {Models} and {Software} {Engineering}},
	publisher = {ACM},
	author = {Wang, Hailong and Xu, Tongtong and Wang, Bei},
	month = apr,
	year = {2024},
	pages = {1--11},
}

@inproceedings{caglar_development_2023,
	address = {Sivas, Turkiye},
	title = {Development of {Cloud} and {Artificial} {Intelligence} based {Software} {Testing} {Platform} ({ChArIoT})},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-0659-0},
	url = {https://ieeexplore.ieee.org/document/10296551/},
	doi = {10.1109/ASYU58738.2023.10296551},
	urldate = {2025-06-12},
	booktitle = {2023 {Innovations} in {Intelligent} {Systems} and {Applications} {Conference} ({ASYU})},
	publisher = {IEEE},
	author = {Caglar, Osman and Taskin, Furkan and Baglum, Cem and Asik, Sergen and Yayan, Ugur},
	month = oct,
	year = {2023},
	pages = {1--6},
}

@inproceedings{strandberg_ethical_2021,
	address = {Oxford, United Kingdom},
	title = {Ethical {AI}-{Powered} {Regression} {Test} {Selection}},
	copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
	isbn = {978-1-6654-3481-2},
	url = {https://ieeexplore.ieee.org/document/9564367/},
	doi = {10.1109/AITEST52744.2021.00025},
	urldate = {2025-06-12},
	booktitle = {2021 {IEEE} {International} {Conference} on {Artificial} {Intelligence} {Testing} ({AITest})},
	publisher = {IEEE},
	author = {Strandberg, Per Erik and Frasheri, Mirgita and Enoiu, Eduard Paul},
	month = aug,
	year = {2021},
	pages = {83--84},
}

@inproceedings{garg_generative_2023,
	address = {Faridabad, India},
	title = {Generative {AI} for {Software} {Test} {Modelling} with a focus on {ERP} {Software}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-4438-7},
	url = {https://ieeexplore.ieee.org/document/10466102/},
	doi = {10.1109/ICAICCIT60255.2023.10466102},
	urldate = {2025-06-12},
	booktitle = {2023 {International} {Conference} on {Advances} in {Computation}, {Communication} and {Information} {Technology} ({ICAICCIT})},
	publisher = {IEEE},
	author = {Garg, Anshumaan and Sharma, Dolly},
	month = nov,
	year = {2023},
	pages = {187--193},
}

@inproceedings{happe_getting_2023,
	address = {San Francisco CA USA},
	title = {Getting pwn’d by {AI}: {Penetration} {Testing} with {Large} {Language} {Models}},
	isbn = {979-8-4007-0327-0},
	shorttitle = {Getting pwn’d by {AI}},
	url = {https://dl.acm.org/doi/10.1145/3611643.3613083},
	doi = {10.1145/3611643.3613083},
	language = {en},
	urldate = {2025-06-12},
	booktitle = {Proceedings of the 31st {ACM} {Joint} {European} {Software} {Engineering} {Conference} and {Symposium} on the {Foundations} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Happe, Andreas and Cito, Jürgen},
	month = nov,
	year = {2023},
	pages = {2082--2086},
}

@inproceedings{zimmermann_gui-based_2023,
	address = {Luxembourg, Luxembourg},
	title = {{GUI}-{Based} {Software} {Testing}: {An} {Automated} {Approach} {Using} {GPT}-4 and {Selenium} {WebDriver}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-3032-8},
	shorttitle = {{GUI}-{Based} {Software} {Testing}},
	url = {https://ieeexplore.ieee.org/document/10298721/},
	doi = {10.1109/ASEW60602.2023.00028},
	urldate = {2025-06-12},
	booktitle = {2023 38th {IEEE}/{ACM} {International} {Conference} on {Automated} {Software} {Engineering} {Workshops} ({ASEW})},
	publisher = {IEEE},
	author = {Zimmermann, Daniel and Koziolek, Anne},
	month = sep,
	year = {2023},
	pages = {171--174},
}

@inproceedings{calvano_leveraging_2025,
	address = {Cagliari Italy},
	title = {Leveraging {Large} {Language} {Models} for {Usability} {Testing}: a {Preliminary} {Study}},
	isbn = {979-8-4007-1409-2},
	shorttitle = {Leveraging {Large} {Language} {Models} for {Usability} {Testing}},
	url = {https://dl.acm.org/doi/10.1145/3708557.3716341},
	doi = {10.1145/3708557.3716341},
	language = {en},
	urldate = {2025-06-12},
	booktitle = {Companion {Proceedings} of the 30th {International} {Conference} on {Intelligent} {User} {Interfaces}},
	publisher = {ACM},
	author = {Calvano, Miriana and Curci, Antonio and Lanzilotti, Rosa and Piccinno, Antonio and Ragone, Azzurra},
	month = mar,
	year = {2025},
	pages = {78--81},
}

@inproceedings{franzosi_llm-based_2025,
	address = {Napoli, Italy},
	title = {{LLM}-{Based} {Labelling} of {Recorded} {Automated} {GUI}-{Based} {Test} {Cases}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3315-0814-2},
	url = {https://ieeexplore.ieee.org/document/10988984/},
	doi = {10.1109/ICST62969.2025.10988984},
	urldate = {2025-06-12},
	booktitle = {2025 {IEEE} {Conference} on {Software} {Testing}, {Verification} and {Validation} ({ICST})},
	publisher = {IEEE},
	author = {Franzosi, Diogo Buarque and Alégroth, Emil and Isaac, Maycel},
	month = mar,
	year = {2025},
	pages = {453--463},
}

@inproceedings{zhang_new_2024,
	address = {Wuhu, China},
	title = {New {Approaches} to {Automated} {Software} {Testing} {Based} on {Artificial} {Intelligence}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3315-2891-1},
	url = {https://ieeexplore.ieee.org/document/10863866/},
	doi = {10.1109/ICAICE63571.2024.10863866},
	urldate = {2025-06-12},
	booktitle = {2024 5th {International} {Conference} on {Artificial} {Intelligence} and {Computer} {Engineering} ({ICAICE})},
	publisher = {IEEE},
	author = {Zhang, Yuli},
	month = nov,
	year = {2024},
	pages = {806--810},
}

@inproceedings{peixoto_effectiveness_2025,
	address = {Ottawa, ON, Canada},
	title = {On the {Effectiveness} of {LLMs} for {Manual} {Test} {Verifications}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3315-0190-7},
	url = {https://ieeexplore.ieee.org/document/11026915/},
	doi = {10.1109/DeepTest66595.2025.00012},
	urldate = {2025-06-12},
	booktitle = {2025 {IEEE}/{ACM} {International} {Workshop} on {Deep} {Learning} for {Testing} and {Testing} for {Deep} {Learning} ({DeepTest})},
	publisher = {IEEE},
	author = {Peixoto, Myron and Baía, Davy and Nascimento, Nathalia and Alencar, Paulo and Fonseca, Baldoino and Ribeiro, Márcio},
	month = may,
	year = {2025},
	pages = {45--52},
}

@inproceedings{gamal_owl_2023,
	address = {Giza, Egypt},
	title = {Owl {Eye}: {An} {AI}-{Driven} {Visual} {Testing} {Tool}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-8103-0},
	shorttitle = {Owl {Eye}},
	url = {https://ieeexplore.ieee.org/document/10296575/},
	doi = {10.1109/NILES59815.2023.10296575},
	urldate = {2025-06-12},
	booktitle = {2023 5th {Novel} {Intelligent} and {Leading} {Emerging} {Sciences} {Conference} ({NILES})},
	publisher = {IEEE},
	author = {Gamal, Ahmed and Emad, Reem and Mohamed, Taher and Mohamed, Omar and Hamdy, Ahmed and Ali, Sarah},
	month = oct,
	year = {2023},
	pages = {312--315},
}

@inproceedings{leu_reducing_2024,
	address = {Lisbon Portugal},
	title = {Reducing {Workload} in {Using} {AI}-based {API} {REST} {Test} {Generation}},
	isbn = {979-8-4007-0588-5},
	url = {https://dl.acm.org/doi/10.1145/3644032.3644449},
	doi = {10.1145/3644032.3644449},
	language = {en},
	urldate = {2025-06-12},
	booktitle = {Proceedings of the 5th {ACM}/{IEEE} {International} {Conference} on {Automation} of {Software} {Test} ({AST} 2024)},
	publisher = {ACM},
	author = {Leu, Benjamin and Volken, Jonas and Kropp, Martin and Dogru, Nejdet and Anslow, Craig and Biddle, Robert},
	month = apr,
	year = {2024},
	pages = {147--148},
}

@inproceedings{confido_reinforcing_2022,
	address = {Big Sky, MT, USA},
	title = {Reinforcing {Penetration} {Testing} {Using} {AI}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {978-1-6654-3760-8},
	url = {https://ieeexplore.ieee.org/document/9843459/},
	doi = {10.1109/AERO53065.2022.9843459},
	urldate = {2025-06-12},
	booktitle = {2022 {IEEE} {Aerospace} {Conference} ({AERO})},
	publisher = {IEEE},
	author = {Confido, Alessandro and Ntagiou, Evridiki V. and Wallum, Marcus},
	month = mar,
	year = {2022},
	pages = {1--15},
}

@inproceedings{ghimis_river_2020,
	address = {Virtual USA},
	title = {{RIVER} 2.0: an open-source testing framework using {AI} techniques},
	isbn = {978-1-4503-8123-9},
	shorttitle = {{RIVER} 2.0},
	url = {https://dl.acm.org/doi/10.1145/3416504.3424335},
	doi = {10.1145/3416504.3424335},
	language = {en},
	urldate = {2025-06-12},
	booktitle = {Proceedings of the 1st {ACM} {SIGSOFT} {International} {Workshop} on {Languages} and {Tools} for {Next}-{Generation} {Testing}},
	publisher = {ACM},
	author = {Ghimis, Bogdan and Paduraru, Miruna and Stefanescu, Alin},
	month = nov,
	year = {2020},
	pages = {13--18},
}

@inproceedings{abdelkarim_tcp-net_2023,
	address = {Athens, Greece},
	title = {{TCP}-{Net}++: {Test} {Case} {Prioritization} {Using} {End}-to-{End} {Deep} {Neural} {Networks} - {Deployment} {Analysis} and {Enhancements}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-3629-0},
	shorttitle = {{TCP}-{Net}++},
	url = {https://ieeexplore.ieee.org/document/10229439/},
	doi = {10.1109/AITest58265.2023.00024},
	urldate = {2025-06-12},
	booktitle = {2023 {IEEE} {International} {Conference} {On} {Artificial} {Intelligence} {Testing} ({AITest})},
	publisher = {IEEE},
	author = {Abdelkarim, Mohamed and ElAdawi, Reem},
	month = jul,
	year = {2023},
	pages = {99--106},
}

@inproceedings{shirzadehhajimahmood_using_2021,
	address = {Athens Greece},
	title = {Using an agent-based approach for robust automated testing of computer games},
	isbn = {978-1-4503-8623-4},
	url = {https://dl.acm.org/doi/10.1145/3472672.3473952},
	doi = {10.1145/3472672.3473952},
	language = {en},
	urldate = {2025-06-12},
	booktitle = {Proceedings of the 12th {International} {Workshop} on {Automating} {TEST} {Case} {Design}, {Selection}, and {Evaluation}},
	publisher = {ACM},
	author = {Shirzadehhajimahmood, Samira and Prasetya, I. S. W. B. and Dignum, Frank and Dastani, Mehdi and Keller, Gabriele},
	month = aug,
	year = {2021},
	pages = {1--8},
}

@inproceedings{ragel_visual_2023,
	address = {Coron, Palawan, Philippines},
	title = {Visual {Test} {Framework}: {Enhancing} {Software} {Test} {Automation} with {Visual} {Artificial} {Intelligence} and {Behavioral} {Driven} {Development}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-8117-7},
	shorttitle = {Visual {Test} {Framework}},
	url = {https://ieeexplore.ieee.org/document/10589222/},
	doi = {10.1109/HNICEM60674.2023.10589222},
	urldate = {2025-06-12},
	booktitle = {2023 {IEEE} 15th {International} {Conference} on {Humanoid}, {Nanotechnology}, {Information} {Technology}, {Communication} and {Control}, {Environment}, and {Management} ({HNICEM})},
	publisher = {IEEE},
	author = {Ragel, Ritz Kevin C. and Balahadia, Francis F.},
	month = nov,
	year = {2023},
	pages = {1--5},
}

@inproceedings{haldar_wip_2024,
	address = {Washington, DC, USA},
	title = {{WIP}: {Assessing} the {Effectiveness} of {ChatGPT} in {Preparatory} {Testing} {Activities}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {979-8-3503-5150-7},
	shorttitle = {{WIP}},
	url = {https://ieeexplore.ieee.org/document/10893214/},
	doi = {10.1109/FIE61694.2024.10893214},
	urldate = {2025-06-12},
	booktitle = {2024 {IEEE} {Frontiers} in {Education} {Conference} ({FIE})},
	publisher = {IEEE},
	author = {Haldar, Susmita and Pierce, Mary and Capretz, Luiz Fernando},
	month = oct,
	year = {2024},
	pages = {1--5},
}

@misc{ferreira_acceptance_2025,
	title = {Acceptance {Test} {Generation} with {Large} {Language} {Models}: {An} {Industrial} {Case} {Study}},
	shorttitle = {Acceptance {Test} {Generation} with {Large} {Language} {Models}},
	url = {http://arxiv.org/abs/2504.07244},
	doi = {10.48550/arXiv.2504.07244},
	abstract = {Large language model (LLM)-powered assistants are increasingly used for generating program code and unit tests, but their application in acceptance testing remains underexplored. To help address this gap, this paper explores the use of LLMs for generating executable acceptance tests for web applications through a two-step process: (i) generating acceptance test scenarios in natural language (in Gherkin) from user stories, and (ii) converting these scenarios into executable test scripts (in Cypress), knowing the HTML code of the pages under test. This two-step approach supports acceptance test-driven development, enhances tester control, and improves test quality. The two steps were implemented in the AutoUAT and Test Flow tools, respectively, powered by GPT-4 Turbo, and integrated into a partner company's workflow and evaluated on real-world projects. The users found the acceptance test scenarios generated by AutoUAT helpful 95\% of the time, even revealing previously overlooked cases. Regarding Test Flow, 92\% of the acceptance test cases generated by Test Flow were considered helpful: 60\% were usable as generated, 8\% required minor fixes, and 24\% needed to be regenerated with additional inputs; the remaining 8\% were discarded due to major issues. These results suggest that LLMs can,in fact, help improve the acceptance test process with appropriate tooling and supervision.},
	urldate = {2025-06-12},
	publisher = {arXiv},
	author = {Ferreira, Margarida and Viegas, Luis and Faria, Joao Pascoal and Lima, Bruno},
	month = apr,
	year = {2025},
	note = {arXiv:2504.07244 [cs]},
	keywords = {Computer Science - Software Engineering},
}

@misc{primbs_assert5_2025,
	title = {{AsserT5}: {Test} {Assertion} {Generation} {Using} a {Fine}-{Tuned} {Code} {Language} {Model}},
	shorttitle = {{AsserT5}},
	url = {http://arxiv.org/abs/2502.02708},
	doi = {10.1109/AST66626.2025.00008},
	abstract = {Writing good software tests can be challenging, therefore approaches that support developers are desirable. While generating complete tests automatically is such an approach commonly proposed in research, developers may already have specific test scenarios in mind and thus just require help in selecting the most suitable test assertions for these scenarios. This can be done using deep learning models to predict assertions for given test code. Prior research on assertion generation trained these models specifically for the task, raising the question how much the use of larger models pre-trained on code that have emerged since then can improve their performance. In particular, while abstracting identifiers has been shown to improve specifically trained models, it remains unclear whether this also generalises to models pre-trained on non-abstracted code. Finally, even though prior work demonstrated high accuracy it remains unclear how this translates into the effectiveness of the assertions at their intended application -- finding faults. To shed light on these open questions, in this paper we propose AsserT5, a new model based on the pre-trained CodeT5 model, and use this to empirically study assertion generation. We find that the abstraction and the inclusion of the focal method are useful also for a fine-tuned pre-trained model, resulting in test assertions that match the ground truth assertions precisely in up to 59.5{\textbackslash}\% of cases, more than twice as precise as prior models. However, evaluation on real bugs from the Defects4J dataset shows that out of 138 bugs detectable with assertions in real-world projects, AsserT5 was only able to suggest fault-finding assertions for 33, indicating the need for further improvements.},
	urldate = {2025-06-12},
	author = {Primbs, Severin and Fein, Benedikt and Fraser, Gordon},
	month = feb,
	year = {2025},
	note = {arXiv:2502.02708 [cs]},
	keywords = {Computer Science - Software Engineering},
}

@inproceedings{gao_clozemaster_2025,
	title = {{ClozeMaster}: {Fuzzing} {Rust} {Compiler} by {Harnessing} {LLMs} for {Infilling} {Masked} {Real} {Programs}},
	isbn = {979-8-3315-0569-1},
	shorttitle = {{ClozeMaster}},
	url = {https://www.computer.org/csdl/proceedings-article/icse/2025/056900a712/251mH1NLq1y},
	doi = {10.1109/ICSE55347.2025.00175},
	abstract = {Ensuring the reliability of the Rust compiler is of paramount importance, given increasing adoption of Rust for critical systems development, due to its emphasis on memory and thread safety. However, generating valid test programs for the Rust compiler poses significant challenges, given Rust’s complex syntax and strict requirements. With the growing popularity of large language models (LLMs), much research in software testing has explored using LLMs to generate test cases. Still, directly using LLMs to generate Rust programs often results in a large number of invalid test cases. Existing studies have indicated that test cases triggering historical compiler bugs can assist in software testing. Our investigation into Rust compiler bug issues supports this observation. Inspired by existing work and our empirical research, we introduce a bracket-based masking and filling strategy called clozeMask. The clozeMask strategy involves extracting test code from historical issue reports, identifying and masking code snippets with specific structures, and using an LLM to fill in the masked portions for synthesizing new test programs. This approach harnesses the generative capabilities of LLMs while retaining the ability to trigger Rust compiler bugs. It enables comprehensive testing of the compiler’s behavior, particularly exploring edge cases. We implemented our approach as a prototype CLOZEMASTER. CLOZEMASTER has identified 27 confirmed bugs for rustc and mrustc, of which 10 have been fixed by developers. Furthermore, our experimental results indicate that CLOZEMASTER outperforms existing fuzzers in terms of code coverage and effectiveness.},
	language = {English},
	urldate = {2025-06-12},
	publisher = {IEEE Computer Society},
	author = {Gao, Hongyan and Yang, Yibiao and Sun, Maolin and Wu, Jiangchang and Zhou, Yuming and Xu, Baowen},
	month = mar,
	year = {2025},
	note = {ISSN: 1558-1225},
	pages = {712--712},
}

@inproceedings{djajadi_using_nodate,
	title = {Using {Large} {Language} {Models} to {Generate} {Concise} and {Understandable} {Test} {Case} {Summaries}},
	url = {https://azaidman.github.io/publications/djajadiICPC2025.pdf},
	doi = {10.1109/ICPC66645.2025.00040},
	abstract = {The 33rd IEEE/ACM International Conference on Program Comprehension (ICPC 2025) is the premier venue for work in the area of program comprehension. It encompasses both human activities for comprehending the software and technologies for supporting such comprehension. ICPC 2025 promises to provide a quality forum for researchers and practitioners from academia and industry to present and to discuss state-of-the-art results and best practices in the field of program comprehension. ICPC 2025 is co-located with ICSE 2025. 
ICPC 2025 solicits four main categories of research contributions: rese ...},
	urldate = {2025-06-12},
	booktitle = {Early {Research} {Achievements} ({ERA})},
	author = {Djajadi, Natanael and Deljouyi, Amirhossein and Zaidman, Andy},
}

@misc{hossain_togll_2024,
	title = {{TOGLL}: {Correct} and {Strong} {Test} {Oracle} {Generation} with {LLMs}},
	shorttitle = {{TOGLL}},
	url = {http://arxiv.org/abs/2405.03786},
	doi = {10.48550/arXiv.2405.03786},
	abstract = {Test oracles play a crucial role in software testing, enabling effective bug detection. Despite initial promise, neural-based methods for automated test oracle generation often result in a large number of false positives and weaker test oracles. While LLMs have demonstrated impressive effectiveness in various software engineering tasks, including code generation, test case creation, and bug fixing, there remains a notable absence of large-scale studies exploring their effectiveness in test oracle generation. The question of whether LLMs can address the challenges in effective oracle generation is both compelling and requires thorough investigation. In this research, we present the first comprehensive study to investigate the capabilities of LLMs in generating correct, diverse, and strong test oracles capable of effectively identifying a large number of unique bugs. To this end, we fine-tuned seven code LLMs using six distinct prompts on the SF110 dataset. Utilizing the most effective fine-tuned LLM and prompt pair, we introduce TOGLL, a novel LLM-based method for test oracle generation. To investigate the generalizability of TOGLL, we conduct studies on 25 large-scale Java projects. Besides assessing the correctness, we also assess the diversity and strength of the generated oracles. We compare the results against EvoSuite and the state-of-the-art neural method, TOGA. Our findings reveal that TOGLL can produce 3.8 times more correct assertion oracles and 4.9 times more exception oracles. Moreover, our findings demonstrate that TOGLL is capable of generating significantly diverse test oracles. It can detect 1,023 unique bugs that EvoSuite cannot, which is ten times more than what the previous SOTA neural-based method, TOGA, can detect.},
	urldate = {2025-06-13},
	publisher = {arXiv},
	author = {Hossain, Soneya Binta and Dwyer, Matthew},
	month = dec,
	year = {2024},
	note = {arXiv:2405.03786 [cs]},
	keywords = {Computer Science - Software Engineering},
}
